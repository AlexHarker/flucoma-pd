#N struct 1040-rectangle float x float c;
#N struct 1040-pixel float x0 float y0 float x1 float y1;
#N struct 1055-draw-item float x float y float c float a float b;
#N struct 1035-rectangle float x float c;
#N struct 1035-pixel float x0 float y0 float x1 float y1;
#N canvas 399 204 698 714 12;
#X obj 18 19 cnv 15 660 42 empty empty fluid.kdtree 1 22 0 36 #4ba3fb
#ffffff 0;
#X obj 510 66 fluid.referencelauncher fluid.kdtree.html reference/kdtree/
;
#X obj 508 580 cnv 15 165 70 empty empty More\\\ information 4 10 0
13 #e0e0e0 #404040 0;
#X obj 18 66 cnv 15 488 17 empty empty A\\\ K-D\\\ tree. 4 8 0 13 #e0e0e0
#404040 0;
#N canvas 30 128 692 686 radius_&_neighbours 0;
#X obj 19 17 cnv 15 660 42 empty empty fluid.kdtree 1 22 0 36 #4ba3fb
#ffffff 0;
#X obj 19 64 cnv 15 488 17 empty empty A\\\ K-D\\\ tree. 4 8 0 13 #e0e0e0
#404040 0;
#X restore 511 628 pd radius_&_neighbours;
#N canvas 112 98 698 764 stripping_it_back 0;
#X obj 19 17 cnv 15 660 42 empty empty fluid.kdtree 1 22 0 36 #4ba3fb
#ffffff 0;
#X obj 19 64 cnv 15 488 17 empty empty A\\\ K-D\\\ tree. 4 8 0 13 #e0e0e0
#404040 0;
#X text 20 96 A stripped back example for how to fluid.kdtree works
;
#X text 317 213 2) Fit a kdtree to the dataset that was just made;
#X text 67 135 1) Create a dataset with four \, two-dimensional points
;
#X text 234 342 3) Move the knob around to create a "query" for the
kdtree, f 34;
#X obj 46 137 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 46 157 t b b b b b, f 23;
#N canvas 804 -701 373 208 create_a_toy_dataset 0;
#X obj 37 37 inlet;
#X obj 107 25 inlet;
#X obj 37 60 t b l, f 9;
#X obj 37 83 f;
#X obj 68 83 + 1;
#X msg 37 139 setpoint point-\$1 kd_tree_h2_plotter;
#X obj 37 162 fluid.dataset kd_tree_h2_ds;
#X msg 107 48 0;
#X obj 113 85 array define kd_tree_h2_query 2;
#X obj 97 110 array set kd_tree_h2_query;
#X connect 0 0 2 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 2 1 9 0;
#X connect 3 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 7 0 3 1;
#X restore 46 269 pd create_a_toy_dataset;
#X msg 46 180 0 0;
#X msg 85 200 0 0.5;
#X msg 131 222 1 1;
#X msg 161 243 1 0.2;
#X text 23 180 "3";
#X text 62 201 "2";
#X text 107 223 "1";
#X text 138 244 "0";
#X msg 317 233 fit kd_tree_h2_ds;
#X obj 317 256 fluid.kdtree kd_tree_h2_tree;
#X obj 128 340 xy 101 101;
#X obj 128 477 expr kd_tree_h2_query[0] = $f1 / 100 \; kd_tree_h2_query[1]
= $f2 / 100 \;, f 38;
#X obj 128 446 route click motion;
#X obj 128 513 t b;
#X msg 128 536 knearest kd_tree_h2_query;
#X obj 128 560 fluid.kdtree kd_tree_h2_tree;
#X obj 128 583 route knearest;
#X listbox 279 653 8 0 0 0 - - - 0;
#X obj 28 631 symbol;
#X symbolatom 28 654 10 0 0 0 - - - 0;
#N canvas 89 120 366 237 retrieve_the_value 0;
#X obj 37 21 inlet;
#X obj 37 83 fluid.dataset kd_tree_h2_ds;
#X obj 37 106 route getpoint;
#X obj 37 150 array get kd_tree_h2_point;
#X obj 37 173 outlet;
#X obj 93 174 array define kd_tree_h2_point;
#X obj 37 41 symbol;
#X msg 37 62 getpoint \$1 kd_tree_h2_point;
#X obj 37 128 t b;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 8 0;
#X connect 3 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 1 0;
#X connect 8 0 3 0;
#X restore 279 630 pd retrieve_the_value;
#X obj 370 534 array get kd_tree_h2_query;
#X listbox 370 557 11 0 0 0 - - - 0;
#X text 450 557 This is our input or "query". We want to find which
stored point in the dataset is closest to this., f 31;
#X text 279 672 This is the value of the closest points. Compare them
to the input to see how "close" they are., f 40;
#X text 24 677 This is the identifier of the point as it was entered
in the dataset., f 27;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 7 1 10 0;
#X connect 7 2 11 0;
#X connect 7 3 12 0;
#X connect 7 4 8 1;
#X connect 9 0 8 0;
#X connect 10 0 8 0;
#X connect 11 0 8 0;
#X connect 12 0 8 0;
#X connect 17 0 18 0;
#X connect 19 0 21 0;
#X connect 20 0 22 0;
#X connect 21 0 20 0;
#X connect 21 1 20 0;
#X connect 22 0 23 0;
#X connect 22 0 30 0;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 29 0;
#X connect 25 0 27 0;
#X connect 27 0 28 0;
#X connect 29 0 26 0;
#X connect 30 0 31 0;
#X restore 511 606 pd stripping_it_back;
#X text 18 85 A K-dimensional tree for efficient neighbourhood searches
of multi-dimensional data.;
#X obj 22 157 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#N canvas 401 -983 972 651 load_data 0;
#X obj 37 44 inlet;
#X obj 630 618 outlet;
#X obj 37 90 fluid.labelset corpus_files;
#X obj 406 292 route getlabel;
#X msg 37 67 read data/flucoma_corpus_files.json \, size;
#X obj 223 111 route size;
#X obj 246 176 until;
#X obj 246 200 f;
#X obj 279 200 + 1;
#X obj 246 269 fluid.labelset corpus_files;
#X msg 287 176 0;
#X obj 246 224 makefilename %d;
#X msg 246 247 getlabel \$1;
#X obj 223 135 t b f b;
#X obj 223 387 list store;
#X obj 406 336 makefilename media/%s;
#X obj 406 314 symbol;
#X msg 223 431 read data/flucoma_corpus.json;
#X obj 444 477 route read;
#X obj 630 548 route fit;
#X obj 341 90 soundfiler;
#X msg 444 501 fit kdtree_h1_analysis;
#X obj 630 572 fluid.ds2text kdtree_h1_analysis kdtree_h1_txt;
#X obj 444 525 fluid.kdtree kdtree_h1_tree;
#X obj 223 455 fluid.dataset kdtree_h1_analysis;
#X obj 432 149 clone fluid.multiarray 2 kdtree_h1;
#X obj 433 198 array define kdtree_h1_slices 1;
#X obj 433 174 text define kdtree_h1_files;
#X obj 223 409 fluid.concataudiofiles kdtree_h1 kdtree_h1_files;
#X obj 433 224 text define kdtree_h1_txt;
#X msg 630 596 setpoints kdtree_h1_txt;
#X msg 341 66 read -resize data/flucoma_corpus_slices.wav kdtree_h1_slices
;
#X obj 406 381 t l l;
#X obj 406 358 list prepend;
#X connect 0 0 4 0;
#X connect 0 0 31 0;
#X connect 2 0 5 0;
#X connect 3 0 16 0;
#X connect 4 0 2 0;
#X connect 5 0 13 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 0 11 0;
#X connect 8 0 7 1;
#X connect 9 0 3 0;
#X connect 10 0 7 1;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 13 0 14 0;
#X connect 13 1 6 0;
#X connect 13 2 10 0;
#X connect 13 2 33 1;
#X connect 14 0 28 0;
#X connect 15 0 33 0;
#X connect 16 0 15 0;
#X connect 17 0 24 0;
#X connect 18 0 21 0;
#X connect 19 0 22 0;
#X connect 21 0 23 0;
#X connect 22 0 30 0;
#X connect 23 0 19 0;
#X connect 24 1 18 0;
#X connect 28 0 17 0;
#X connect 30 0 1 0;
#X connect 31 0 20 0;
#X connect 32 0 14 1;
#X connect 32 1 33 1;
#X connect 33 0 32 0;
#X restore 22 177 pd load_data;
#X obj 22 201 fluid.plotter;
#X obj 53 530 array set kdtree_h1_query;
#X obj 22 506 t b l;
#X msg 21 553 knearest kdtree_h1_query;
#X obj 21 577 fluid.kdtree kdtree_h1_tree -numneighbours 1;
#X obj 239 530 array define kdtree_h1_query 2;
#X obj 326 599 route knearest;
#X obj 326 621 symbol;
#X obj 119 177 r kd_tree_h1_plotter;
#X msg 326 644 highlight \$1;
#X obj 326 668 s kd_tree_h1_plotter;
#X text 327 203 2) Click and drag around this space.;
#X text 41 142 1) For demonstrative purposes much of this first example
is preanalused and pretrained data. This button loads in this subpatch
when the helpfle is opened, f 86;
#X text 330 266 Each of these points on this space represents a small
segment of a large sound file. Using audio descriptors each segment
is assigned two values \, loudness and spectral centroid \, that attempt
to represent perceived qualities of the sound. The fluid.kdtree~ performs
the function of mapping our mouse inside the space \, to the point
that has the most similar set of descriptor values. In effect \, it
is a fast lookup mechanism so that we can scrub through the analysis
space., f 49;
#X text 330 478 For a relevant tutorial \, see https://learn.flucoma.org/overviews
, f 37;
#X obj 108 687 dac~;
#X floatatom 108 621 5 0 0 0 - - - 0;
#X obj 108 665 *~;
#X obj 178 645 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 108 600 fluid.s2f;
#N canvas 739 591 308 296 player 0;
#X obj 37 15 inlet;
#X obj 51 145 phasor~;
#X obj 51 169 *~, f 18;
#X obj 18 200 +~;
#X obj 37 69 t f l;
#X obj 175 96 expr $f2 - $f1;
#X obj 18 247 outlet~;
#X obj 51 121 expr 44100 / $f1;
#X obj 37 45 array get kdtree_h1_slices 0 2;
#X obj 18 223 tabread~ kdtree_h1-0;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 9 0;
#X connect 4 0 3 1;
#X connect 4 1 5 0;
#X connect 5 0 2 1;
#X connect 5 0 7 0;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 9 0 6 0;
#X restore 108 644 pd player;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 11 0 12 0;
#X connect 11 1 10 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 15 0 16 0;
#X connect 15 0 28 0;
#X connect 16 0 18 0;
#X connect 17 0 9 0;
#X connect 18 0 19 0;
#X connect 25 0 29 0;
#X connect 26 0 24 1;
#X connect 26 0 24 0;
#X connect 27 0 26 1;
#X connect 28 0 25 0;
#X connect 29 0 26 0;
